/*
Deployment script for ContractExam

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "ContractExam"
:setvar DefaultFilePrefix "ContractExam"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL15.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL15.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating database $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE SQL_Latin1_General_CP1_CI_AS
GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CREATE_STATISTICS ON(INCREMENTAL = OFF),
                MEMORY_OPTIMIZED_ELEVATE_TO_SNAPSHOT = OFF,
                DELAYED_DURABILITY = DISABLED 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (QUERY_CAPTURE_MODE = ALL, DATA_FLUSH_INTERVAL_SECONDS = 900, INTERVAL_LENGTH_MINUTES = 60, MAX_PLANS_PER_QUERY = 200, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367), MAX_STORAGE_SIZE_MB = 100) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE = OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE SCOPED CONFIGURATION SET MAXDOP = 0;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET MAXDOP = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET LEGACY_CARDINALITY_ESTIMATION = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET LEGACY_CARDINALITY_ESTIMATION = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET PARAMETER_SNIFFING = ON;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET PARAMETER_SNIFFING = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET QUERY_OPTIMIZER_HOTFIXES = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET QUERY_OPTIMIZER_HOTFIXES = PRIMARY;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET TEMPORAL_HISTORY_RETENTION ON 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating Table [dbo].[Contract]...';


GO
CREATE TABLE [dbo].[Contract] (
    [IDContract]   INT           IDENTITY (1, 1) NOT NULL,
    [ContractCode] NVARCHAR (30) NULL,
    [IDState]      INT           NULL,
    PRIMARY KEY CLUSTERED ([IDContract] ASC)
);


GO
PRINT N'Creating Table [dbo].[ContractDate]...';


GO
CREATE TABLE [dbo].[ContractDate] (
    [IDContractDate]   INT      IDENTITY (1, 1) NOT NULL,
    [IDContract]       INT      NULL,
    [ContractDateType] INT      NULL,
    [Date]             DATETIME NULL,
    PRIMARY KEY CLUSTERED ([IDContractDate] ASC)
);


GO
PRINT N'Creating Table [dbo].[ContractDateType]...';


GO
CREATE TABLE [dbo].[ContractDateType] (
    [IDContractDateType] INT           NOT NULL,
    [Code]               NVARCHAR (20) NULL,
    [Name]               NVARCHAR (20) NULL,
    PRIMARY KEY CLUSTERED ([IDContractDateType] ASC)
);


GO
PRINT N'Creating Table [dbo].[ContractPrice]...';


GO
CREATE TABLE [dbo].[ContractPrice] (
    [IDContractPrice]     INT          IDENTITY (1, 1) NOT NULL,
    [IDContract]          INT          NULL,
    [IDContractPriceType] INT          NULL,
    [Value]               NUMERIC (18) NULL,
    [IDCurrency]          INT          NULL,
    PRIMARY KEY CLUSTERED ([IDContractPrice] ASC)
);


GO
PRINT N'Creating Table [dbo].[ContractPriceType]...';


GO
CREATE TABLE [dbo].[ContractPriceType] (
    [IDContractPriceType] INT           NOT NULL,
    [Code]                NVARCHAR (20) NULL,
    [Name]                NVARCHAR (20) NULL,
    PRIMARY KEY CLUSTERED ([IDContractPriceType] ASC)
);


GO
PRINT N'Creating Table [dbo].[ContractState]...';


GO
CREATE TABLE [dbo].[ContractState] (
    [IDContractState] INT           NOT NULL,
    [Code]            NVARCHAR (6)  NULL,
    [Name]            NVARCHAR (20) NULL,
    PRIMARY KEY CLUSTERED ([IDContractState] ASC)
);


GO
PRINT N'Creating Table [dbo].[ContractXSubject]...';


GO
CREATE TABLE [dbo].[ContractXSubject] (
    [IDContractSubject] INT IDENTITY (1, 1) NOT NULL,
    [IDContract]        INT NULL,
    [IDIndividual]      INT NULL,
    [IDSubjectRole]     INT NULL,
    PRIMARY KEY CLUSTERED ([IDContractSubject] ASC)
);


GO
PRINT N'Creating Table [dbo].[Currency]...';


GO
CREATE TABLE [dbo].[Currency] (
    [IDCurrency] INT           NOT NULL,
    [Code]       NVARCHAR (3)  NULL,
    [Name]       NVARCHAR (50) NULL,
    PRIMARY KEY CLUSTERED ([IDCurrency] ASC)
);


GO
PRINT N'Creating Table [dbo].[Individual]...';


GO
CREATE TABLE [dbo].[Individual] (
    [IDIndividual] INT            IDENTITY (1, 1) NOT NULL,
    [CustomerCode] NVARCHAR (50)  NULL,
    [FirstName]    NVARCHAR (100) NULL,
    [LastName]     NVARCHAR (100) NULL,
    [Gender]       NVARCHAR (12)  NULL,
    [BirthDate]    DATETIME       NULL,
    [NationalID]   NVARCHAR (50)  NULL,
    PRIMARY KEY CLUSTERED ([IDIndividual] ASC)
);


GO
PRINT N'Creating Table [dbo].[SubjectRole]...';


GO
CREATE TABLE [dbo].[SubjectRole] (
    [IDSubjectRole] INT           NOT NULL,
    [Name]          NVARCHAR (10) NULL,
    PRIMARY KEY CLUSTERED ([IDSubjectRole] ASC)
);


GO
PRINT N'Creating Foreign Key <unnamed>...';


GO
ALTER TABLE [dbo].[Contract]
    ADD FOREIGN KEY ([IDState]) REFERENCES [dbo].[ContractState] ([IDContractState]);


GO
PRINT N'Creating Foreign Key <unnamed>...';


GO
ALTER TABLE [dbo].[ContractDate]
    ADD FOREIGN KEY ([ContractDateType]) REFERENCES [dbo].[ContractDateType] ([IDContractDateType]);


GO
PRINT N'Creating Foreign Key <unnamed>...';


GO
ALTER TABLE [dbo].[ContractPrice]
    ADD FOREIGN KEY ([IDCurrency]) REFERENCES [dbo].[Currency] ([IDCurrency]);


GO
PRINT N'Creating Foreign Key <unnamed>...';


GO
ALTER TABLE [dbo].[ContractPrice]
    ADD FOREIGN KEY ([IDContractPriceType]) REFERENCES [dbo].[ContractPriceType] ([IDContractPriceType]);


GO
PRINT N'Creating Foreign Key <unnamed>...';


GO
ALTER TABLE [dbo].[ContractXSubject]
    ADD FOREIGN KEY ([IDIndividual]) REFERENCES [dbo].[Individual] ([IDIndividual]);


GO
PRINT N'Creating Foreign Key <unnamed>...';


GO
ALTER TABLE [dbo].[ContractXSubject]
    ADD FOREIGN KEY ([IDSubjectRole]) REFERENCES [dbo].[SubjectRole] ([IDSubjectRole]);


GO
PRINT N'Creating Foreign Key <unnamed>...';


GO
ALTER TABLE [dbo].[ContractXSubject]
    ADD FOREIGN KEY ([IDContract]) REFERENCES [dbo].[Contract] ([IDContract]);


GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
